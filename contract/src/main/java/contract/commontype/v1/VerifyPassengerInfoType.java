/**
 * Autogenerated by soa-sdk-toolkit
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package contract.commontype.v1;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "VerifyPassengerInfoType", namespace = "urn:com:ctrip:flight:intl:booking:bookingValidation:contract:commontype:v1", propOrder = {
    "travelerCategoryCode", "passengerCount"})
@SuppressWarnings("all")
public class VerifyPassengerInfoType implements Serializable {

    private static final long serialVersionUID = 1L;

    public VerifyPassengerInfoType(TravelerCategoryCodeEnum travelerCategoryCode, int passengerCount) {
        this.travelerCategoryCode = travelerCategoryCode;
        this.passengerCount = passengerCount;
    }

    public VerifyPassengerInfoType() {
        this.travelerCategoryCode = TravelerCategoryCodeEnum.values()[0];
    }

    @JsonProperty("TravelerCategoryCode")
    @XmlElement(name = "TravelerCategoryCode")
    private TravelerCategoryCodeEnum travelerCategoryCode;

    @JsonProperty("PassengerCount")
    @XmlElement(name = "PassengerCount")
    private int passengerCount;

    /**
     * 验舱乘客类型
     */
    public TravelerCategoryCodeEnum getTravelerCategoryCode() {
        return this.travelerCategoryCode;
    }

    public void setTravelerCategoryCode(TravelerCategoryCodeEnum travelerCategoryCode) {
        this.travelerCategoryCode = travelerCategoryCode;
    }

    /**
     * 乘客数量
     */
    public int getPassengerCount() {
        return this.passengerCount;
    }

    public void setPassengerCount(int passengerCount) {
        this.passengerCount = passengerCount;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;

        final VerifyPassengerInfoType other = (VerifyPassengerInfoType) obj;
        return Objects.equal(this.travelerCategoryCode, other.travelerCategoryCode) && Objects
            .equal(this.passengerCount, other.passengerCount);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.travelerCategoryCode);
        result = 31 * result + Objects.hashCode(this.passengerCount);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this).add("travelerCategoryCode", travelerCategoryCode)
            .add("passengerCount", passengerCount).toString();
    }

}