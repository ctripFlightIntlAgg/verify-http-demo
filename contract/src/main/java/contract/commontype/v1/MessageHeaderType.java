/**
 * Autogenerated by soa-sdk-toolkit
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package contract.commontype.v1;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

/**
 * 此类型包含请求/响应报文共有的属性
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlSeeAlso({RequestHeaderType.class, ResponseHeaderType.class})
@XmlType(name = "MessageHeaderType", namespace = "urn:com:ctrip:flight:intl:booking:bookingValidation:contract:commontype:v1", propOrder = {
    "sourceAppID", "transactionID", "channelID", "subChannelID", "customerID", "clientIP", "diagInput"})
@SuppressWarnings("all")
public class MessageHeaderType implements Serializable {

    private static final long serialVersionUID = 1L;

    public MessageHeaderType(String sourceAppID, String transactionID, String channelID, int subChannelID,
        String customerID, String clientIP, String diagInput) {
        this.sourceAppID = sourceAppID;
        this.transactionID = transactionID;
        this.channelID = channelID;
        this.subChannelID = subChannelID;
        this.customerID = customerID;
        this.clientIP = clientIP;
        this.diagInput = diagInput;
    }

    public MessageHeaderType() {
    }

    @JsonProperty("SourceAppID")
    @XmlElement(name = "SourceAppID")
    private String sourceAppID;

    @JsonProperty("TransactionID")
    @XmlElement(name = "TransactionID")
    private String transactionID;

    @JsonProperty("ChannelID")
    @XmlElement(name = "ChannelID")
    private String channelID;

    @JsonProperty("SubChannelID")
    @XmlElement(name = "SubChannelID")
    private int subChannelID;

    @JsonProperty("CustomerID")
    @XmlElement(name = "CustomerID")
    private String customerID;

    @JsonProperty("ClientIP")
    @XmlElement(name = "ClientIP")
    private String clientIP;

    @JsonProperty("DiagInput")
    @XmlElement(name = "DiagInput")
    private String diagInput;

    /**
     * 调用方的应用ID
     */
    public String getSourceAppID() {
        return this.sourceAppID;
    }

    public void setSourceAppID(String sourceAppID) {
        this.sourceAppID = sourceAppID;
    }

    /**
     * 用来标识事务号，可用于查询在不同应用系统中属于同一事务的所有数据
     */
    public String getTransactionID() {
        return this.transactionID;
    }

    public void setTransactionID(String transactionID) {
        this.transactionID = transactionID;
    }

    /**
     * 销售渠道，参考 ChannelIDEnum.name()
     */
    public String getChannelID() {
        return this.channelID;
    }

    public void setChannelID(String channelID) {
        this.channelID = channelID;
    }

    /**
     * 子渠道标识，(引入以避免修改ChannelID枚举值)
     */
    public int getSubChannelID() {
        return this.subChannelID;
    }

    public void setSubChannelID(int subChannelID) {
        this.subChannelID = subChannelID;
    }

    /**
     * 当前登录用户ID,例如:wwwwww
     */
    public String getCustomerID() {
        return this.customerID;
    }

    public void setCustomerID(String customerID) {
        this.customerID = customerID;
    }

    /**
     * 客户端请求IP
     */
    public String getClientIP() {
        return this.clientIP;
    }

    public void setClientIP(String clientIP) {
        this.clientIP = clientIP;
    }

    /**
     * 给调试使用的数据
     */
    public String getDiagInput() {
        return this.diagInput;
    }

    public void setDiagInput(String diagInput) {
        this.diagInput = diagInput;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;

        final MessageHeaderType other = (MessageHeaderType) obj;
        return Objects.equal(this.sourceAppID, other.sourceAppID) && Objects
            .equal(this.transactionID, other.transactionID) && Objects.equal(this.channelID, other.channelID) && Objects
            .equal(this.subChannelID, other.subChannelID) && Objects.equal(this.customerID, other.customerID) && Objects
            .equal(this.clientIP, other.clientIP) && Objects.equal(this.diagInput, other.diagInput);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.sourceAppID);
        result = 31 * result + Objects.hashCode(this.transactionID);
        result = 31 * result + Objects.hashCode(this.channelID);
        result = 31 * result + Objects.hashCode(this.subChannelID);
        result = 31 * result + Objects.hashCode(this.customerID);
        result = 31 * result + Objects.hashCode(this.clientIP);
        result = 31 * result + Objects.hashCode(this.diagInput);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this).add("sourceAppID", sourceAppID).add("transactionID", transactionID)
            .add("channelID", channelID).add("subChannelID", subChannelID).add("customerID", customerID)
            .add("clientIP", clientIP).add("diagInput", diagInput).toString();
    }

}