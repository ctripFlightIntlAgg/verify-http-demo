/**
 * Autogenerated by soa-sdk-toolkit
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package contract.commontype.v1;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import java.util.List;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;

/**
 * 航班信息
 */
public class BookingFlightType implements Serializable {

    private static final long serialVersionUID = 1L;

    public BookingFlightType(String carrierAirlineCode, String flightNumber, String operatingCarrierAirlineCode,
        String operatingFlightNumber, String departureCityCode, String arrivalCityCode, String departureAirportCode,
        String arrivalAirportCode, String takeoffDateTime, String arrivalDateTime, BookingClassType bookingClass,
        List<TagType> tagList) {
        this.carrierAirlineCode = carrierAirlineCode;
        this.flightNumber = flightNumber;
        this.operatingCarrierAirlineCode = operatingCarrierAirlineCode;
        this.operatingFlightNumber = operatingFlightNumber;
        this.departureCityCode = departureCityCode;
        this.arrivalCityCode = arrivalCityCode;
        this.departureAirportCode = departureAirportCode;
        this.arrivalAirportCode = arrivalAirportCode;
        this.takeoffDateTime = takeoffDateTime;
        this.arrivalDateTime = arrivalDateTime;
        this.bookingClass = bookingClass;
        this.tagList = tagList;
    }

    public BookingFlightType() {
    }

    @JsonProperty("CarrierAirlineCode")
    @XmlElement(name = "CarrierAirlineCode")
    private String carrierAirlineCode;

    @JsonProperty("FlightNumber")
    @XmlElement(name = "FlightNumber")
    private String flightNumber;

    @JsonProperty("OperatingCarrierAirlineCode")
    @XmlElement(name = "OperatingCarrierAirlineCode")
    private String operatingCarrierAirlineCode;

    @JsonProperty("OperatingFlightNumber")
    @XmlElement(name = "OperatingFlightNumber")
    private String operatingFlightNumber;

    @JsonProperty("DepartureCityCode")
    @XmlElement(name = "DepartureCityCode")
    private String departureCityCode;

    @JsonProperty("ArrivalCityCode")
    @XmlElement(name = "ArrivalCityCode")
    private String arrivalCityCode;

    @JsonProperty("DepartureAirportCode")
    @XmlElement(name = "DepartureAirportCode")
    private String departureAirportCode;

    @JsonProperty("ArrivalAirportCode")
    @XmlElement(name = "ArrivalAirportCode")
    private String arrivalAirportCode;

    @JsonProperty("TakeoffDateTime")
    @XmlElement(name = "TakeoffDateTime")
    private String takeoffDateTime;

    @JsonProperty("ArrivalDateTime")
    @XmlElement(name = "ArrivalDateTime")
    private String arrivalDateTime;

    @JsonProperty("BookingClass")
    @XmlElement(name = "BookingClass")
    private BookingClassType bookingClass;

    @JsonProperty("TagList")
    @XmlElement(name = "Tag")
    @XmlElementWrapper(name = "TagList")
    private List<TagType> tagList;

    /**
     * 票面航空公司
     */
    public String getCarrierAirlineCode() {
        return this.carrierAirlineCode;
    }

    public void setCarrierAirlineCode(String carrierAirlineCode) {
        this.carrierAirlineCode = carrierAirlineCode;
    }

    /**
     * 票面航空公司航班号
     */
    public String getFlightNumber() {
        return this.flightNumber;
    }

    public void setFlightNumber(String flightNumber) {
        this.flightNumber = flightNumber;
    }

    /**
     * 承运航空公司
     */
    public String getOperatingCarrierAirlineCode() {
        return this.operatingCarrierAirlineCode;
    }

    public void setOperatingCarrierAirlineCode(String operatingCarrierAirlineCode) {
        this.operatingCarrierAirlineCode = operatingCarrierAirlineCode;
    }

    /**
     * 承运航空公司航班号
     */
    public String getOperatingFlightNumber() {
        return this.operatingFlightNumber;
    }

    public void setOperatingFlightNumber(String operatingFlightNumber) {
        this.operatingFlightNumber = operatingFlightNumber;
    }

    /**
     * 出发城市
     */
    public String getDepartureCityCode() {
        return this.departureCityCode;
    }

    public void setDepartureCityCode(String departureCityCode) {
        this.departureCityCode = departureCityCode;
    }

    /**
     * 到达城市
     */
    public String getArrivalCityCode() {
        return this.arrivalCityCode;
    }

    public void setArrivalCityCode(String arrivalCityCode) {
        this.arrivalCityCode = arrivalCityCode;
    }

    /**
     * 出发机场
     */
    public String getDepartureAirportCode() {
        return this.departureAirportCode;
    }

    public void setDepartureAirportCode(String departureAirportCode) {
        this.departureAirportCode = departureAirportCode;
    }

    /**
     * 到达机场
     */
    public String getArrivalAirportCode() {
        return this.arrivalAirportCode;
    }

    public void setArrivalAirportCode(String arrivalAirportCode) {
        this.arrivalAirportCode = arrivalAirportCode;
    }

    /**
     * 出发日期 pattern: yyyy-MM-dd HH:mm:ss
     */
    public String getTakeoffDateTime() {
        return this.takeoffDateTime;
    }

    public void setTakeoffDateTime(String takeoffDateTime) {
        this.takeoffDateTime = takeoffDateTime;
    }

    /**
     * 到达日期 pattern: yyyy-MM-dd HH:mm:ss
     */
    public String getArrivalDateTime() {
        return this.arrivalDateTime;
    }

    public void setArrivalDateTime(String arrivalDateTime) {
        this.arrivalDateTime = arrivalDateTime;
    }

    public BookingClassType getBookingClass() {
        return this.bookingClass;
    }

    public void setBookingClass(BookingClassType bookingClass) {
        this.bookingClass = bookingClass;
    }

    /**
     * 用于存放一些和统计相关的非业务字段
     */
    public List<TagType> getTagList() {
        return this.tagList;
    }

    public void setTagList(List<TagType> tagList) {
        this.tagList = tagList;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;

        final BookingFlightType other = (BookingFlightType) obj;
        return Objects.equal(this.carrierAirlineCode, other.carrierAirlineCode) && Objects
            .equal(this.flightNumber, other.flightNumber) && Objects
            .equal(this.operatingCarrierAirlineCode, other.operatingCarrierAirlineCode) && Objects
            .equal(this.operatingFlightNumber, other.operatingFlightNumber) && Objects
            .equal(this.departureCityCode, other.departureCityCode) && Objects
            .equal(this.arrivalCityCode, other.arrivalCityCode) && Objects
            .equal(this.departureAirportCode, other.departureAirportCode) && Objects
            .equal(this.arrivalAirportCode, other.arrivalAirportCode) && Objects
            .equal(this.takeoffDateTime, other.takeoffDateTime) && Objects
            .equal(this.arrivalDateTime, other.arrivalDateTime) && Objects.equal(this.bookingClass, other.bookingClass)
            && Objects.equal(this.tagList, other.tagList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.carrierAirlineCode);
        result = 31 * result + Objects.hashCode(this.flightNumber);
        result = 31 * result + Objects.hashCode(this.operatingCarrierAirlineCode);
        result = 31 * result + Objects.hashCode(this.operatingFlightNumber);
        result = 31 * result + Objects.hashCode(this.departureCityCode);
        result = 31 * result + Objects.hashCode(this.arrivalCityCode);
        result = 31 * result + Objects.hashCode(this.departureAirportCode);
        result = 31 * result + Objects.hashCode(this.arrivalAirportCode);
        result = 31 * result + Objects.hashCode(this.takeoffDateTime);
        result = 31 * result + Objects.hashCode(this.arrivalDateTime);
        result = 31 * result + Objects.hashCode(this.bookingClass);
        result = 31 * result + Objects.hashCode(this.tagList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this).add("carrierAirlineCode", carrierAirlineCode)
            .add("flightNumber", flightNumber).add("operatingCarrierAirlineCode", operatingCarrierAirlineCode)
            .add("operatingFlightNumber", operatingFlightNumber).add("departureCityCode", departureCityCode)
            .add("arrivalCityCode", arrivalCityCode).add("departureAirportCode", departureAirportCode)
            .add("arrivalAirportCode", arrivalAirportCode).add("takeoffDateTime", takeoffDateTime)
            .add("arrivalDateTime", arrivalDateTime).add("bookingClass", bookingClass).add("tagList", tagList)
            .toString();
    }

}