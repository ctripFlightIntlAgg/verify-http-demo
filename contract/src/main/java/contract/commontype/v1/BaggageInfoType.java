/**
 * Autogenerated by soa-sdk-toolkit
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package contract.commontype.v1;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlType;

/**
 *
 *                 行李额
 *
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BaggageInfoType", namespace = "urn:com:ctrip:flight:intl:booking:bookingValidation:contract:commontype:v1", propOrder = {
    "itineraryID", "baggageTextCN", "baggageTextGLB", "travelerCategoryCode", "baggageSize", "baggageDetailList"})
@SuppressWarnings("all")
public class BaggageInfoType implements Serializable {

    private static final long serialVersionUID = 1L;

    public BaggageInfoType(int itineraryID, String baggageTextCN, String baggageTextGLB,
        TravelerCategoryCodeEnum travelerCategoryCode, BaggageSizeType baggageSize,
        List<BaggageDetailType> baggageDetailList) {
        this.itineraryID = itineraryID;
        this.baggageTextCN = baggageTextCN;
        this.baggageTextGLB = baggageTextGLB;
        this.travelerCategoryCode = travelerCategoryCode;
        this.baggageSize = baggageSize;
        this.baggageDetailList = baggageDetailList;
    }

    public BaggageInfoType() {
        this.travelerCategoryCode = TravelerCategoryCodeEnum.values()[0];
    }

    @JsonProperty("ItineraryID")
    @XmlElement(name = "ItineraryID")
    private int itineraryID;

    @JsonProperty("BaggageTextCN")
    @XmlElement(name = "BaggageTextCN")
    private String baggageTextCN;

    @JsonProperty("BaggageTextGLB")
    @XmlElement(name = "BaggageTextGLB")
    private String baggageTextGLB;

    @JsonProperty("TravelerCategoryCode")
    @XmlElement(name = "TravelerCategoryCode")
    private TravelerCategoryCodeEnum travelerCategoryCode;

    @JsonProperty("BaggageSize")
    @XmlElement(name = "BaggageSize")
    private BaggageSizeType baggageSize;

    @JsonProperty("BaggageDetailList")
    @XmlElement(name = "BaggageDetail")
    @XmlElementWrapper(name = "BaggageDetailList")
    private List<BaggageDetailType> baggageDetailList;

    /**
     * 用户航程序号（单程为1，往返程为1-2，联程类推）
     */
    public int getItineraryID() {
        return this.itineraryID;
    }

    public void setItineraryID(int itineraryID) {
        this.itineraryID = itineraryID;
    }

    /**
     * 行李额中文描述
     */
    public String getBaggageTextCN() {
        return this.baggageTextCN;
    }

    public void setBaggageTextCN(String baggageTextCN) {
        this.baggageTextCN = baggageTextCN;
    }

    /**
     * 行李额销售区域语言描述
     */
    public String getBaggageTextGLB() {
        return this.baggageTextGLB;
    }

    public void setBaggageTextGLB(String baggageTextGLB) {
        this.baggageTextGLB = baggageTextGLB;
    }

    /**
     * 乘客类型
     */
    public TravelerCategoryCodeEnum getTravelerCategoryCode() {
        return this.travelerCategoryCode;
    }

    public void setTravelerCategoryCode(TravelerCategoryCodeEnum travelerCategoryCode) {
        this.travelerCategoryCode = travelerCategoryCode;
    }

    /**
     * 行李额尺寸信息
     */
    public BaggageSizeType getBaggageSize() {
        return this.baggageSize;
    }

    public void setBaggageSize(BaggageSizeType baggageSize) {
        this.baggageSize = baggageSize;
    }

    /**
     * 行李额详细数据
     */
    public List<BaggageDetailType> getBaggageDetailList() {
        return this.baggageDetailList;
    }

    public void setBaggageDetailList(List<BaggageDetailType> baggageDetailList) {
        this.baggageDetailList = baggageDetailList;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;

        final BaggageInfoType other = (BaggageInfoType) obj;
        return Objects.equal(this.itineraryID, other.itineraryID) && Objects
            .equal(this.baggageTextCN, other.baggageTextCN) && Objects.equal(this.baggageTextGLB, other.baggageTextGLB)
            && Objects.equal(this.travelerCategoryCode, other.travelerCategoryCode) && Objects
            .equal(this.baggageSize, other.baggageSize) && Objects
            .equal(this.baggageDetailList, other.baggageDetailList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.itineraryID);
        result = 31 * result + Objects.hashCode(this.baggageTextCN);
        result = 31 * result + Objects.hashCode(this.baggageTextGLB);
        result = 31 * result + Objects.hashCode(this.travelerCategoryCode);
        result = 31 * result + Objects.hashCode(this.baggageSize);
        result = 31 * result + Objects.hashCode(this.baggageDetailList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this).add("itineraryID", itineraryID).add("baggageTextCN", baggageTextCN)
            .add("baggageTextGLB", baggageTextGLB).add("travelerCategoryCode", travelerCategoryCode)
            .add("baggageSize", baggageSize).add("baggageDetailList", baggageDetailList).toString();
    }

}