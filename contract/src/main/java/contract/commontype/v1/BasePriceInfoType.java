/**
 * Autogenerated by soa-sdk-toolkit
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package contract.commontype.v1;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

/**
 * 价格信息
 */

public class BasePriceInfoType implements Serializable {

    private static final long serialVersionUID = 1L;

    public BasePriceInfoType(String eligibility, TravelerCategoryCodeEnum travelerCategoryCode, AgencyType agency,
        PriceDetailType paidPriceDetail, PriceDetailType originalPriceDetail, List<TagType> tagList) {
        this.eligibility = eligibility;
        this.travelerCategoryCode = travelerCategoryCode;
        this.agency = agency;
        this.paidPriceDetail = paidPriceDetail;
        this.originalPriceDetail = originalPriceDetail;
        this.tagList = tagList;
    }

    public BasePriceInfoType() {
        this.travelerCategoryCode = TravelerCategoryCodeEnum.values()[0];
    }

    @JsonProperty("Eligibility")
    @XmlElement(name = "Eligibility")
    private String eligibility;

    @JsonProperty("TravelerCategoryCode")
    @XmlElement(name = "TravelerCategoryCode")
    private TravelerCategoryCodeEnum travelerCategoryCode;

    @JsonProperty("Agency")
    @XmlElement(name = "Agency")
    private AgencyType agency;

    @JsonProperty("PaidPriceDetail")
    @XmlElement(name = "PaidPriceDetail")
    private PriceDetailType paidPriceDetail;

    @JsonProperty("OriginalPriceDetail")
    @XmlElement(name = "OriginalPriceDetail")
    private PriceDetailType originalPriceDetail;

    @JsonProperty("TagList")
    @XmlElement(name = "Tag")
    @XmlElementWrapper(name = "TagList")
    private List<TagType> tagList;

    /**
     * *乘客资质 ADT,INF,CNN（成人、儿童、婴儿）
     */
    public String getEligibility() {
        return this.eligibility;
    }

    public void setEligibility(String eligibility) {
        this.eligibility = eligibility;
    }

    /**
     * *乘客类型
     */
    public TravelerCategoryCodeEnum getTravelerCategoryCode() {
        return this.travelerCategoryCode;
    }

    public void setTravelerCategoryCode(TravelerCategoryCodeEnum travelerCategoryCode) {
        this.travelerCategoryCode = travelerCategoryCode;
    }

    /**
     * *票台城市信息实体
     */
    public AgencyType getAgency() {
        return this.agency;
    }

    public void setAgency(AgencyType agency) {
        this.agency = agency;
    }

    /**
     * *实收币种价格
     */
    public PriceDetailType getPaidPriceDetail() {
        return this.paidPriceDetail;
    }

    public void setPaidPriceDetail(PriceDetailType paidPriceDetail) {
        this.paidPriceDetail = paidPriceDetail;
    }

    /**
     * *原始币种的价格
     */
    public PriceDetailType getOriginalPriceDetail() {
        return this.originalPriceDetail;
    }

    public void setOriginalPriceDetail(PriceDetailType originalPriceDetail) {
        this.originalPriceDetail = originalPriceDetail;
    }

    public List<TagType> getTagList() {
        return this.tagList;
    }

    public void setTagList(List<TagType> tagList) {
        this.tagList = tagList;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;

        final BasePriceInfoType other = (BasePriceInfoType) obj;
        return Objects.equal(this.eligibility, other.eligibility) && Objects
            .equal(this.travelerCategoryCode, other.travelerCategoryCode) && Objects.equal(this.agency, other.agency)
            && Objects.equal(this.paidPriceDetail, other.paidPriceDetail) && Objects
            .equal(this.originalPriceDetail, other.originalPriceDetail) && Objects.equal(this.tagList, other.tagList);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.eligibility);
        result = 31 * result + Objects.hashCode(this.travelerCategoryCode);
        result = 31 * result + Objects.hashCode(this.agency);
        result = 31 * result + Objects.hashCode(this.paidPriceDetail);
        result = 31 * result + Objects.hashCode(this.originalPriceDetail);
        result = 31 * result + Objects.hashCode(this.tagList);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this).add("eligibility", eligibility)
            .add("travelerCategoryCode", travelerCategoryCode).add("agency", agency)
            .add("paidPriceDetail", paidPriceDetail).add("originalPriceDetail", originalPriceDetail)
            .add("tagList", tagList).toString();
    }

}
