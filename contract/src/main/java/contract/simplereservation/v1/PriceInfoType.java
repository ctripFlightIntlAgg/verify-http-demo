/**
 * Autogenerated by soa-sdk-toolkit
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package contract.simplereservation.v1;

import contract.commontype.v1.BasePriceInfoType;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 价格信息
 */
@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PriceInfoType", namespace = "urn:com:ctrip:flight:intl:booking:bookingValidation:contract:simplereservation:v1", propOrder = {
    "qteCommand"})
@SuppressWarnings("all")
public class PriceInfoType extends BasePriceInfoType implements Serializable {

    private static final long serialVersionUID = 1L;

    public PriceInfoType(String qteCommand) {
        this.qteCommand = qteCommand;
    }

    public PriceInfoType() {
    }

    @JsonProperty("QteCommand")
    @XmlElement(name = "QteCommand")
    private String qteCommand;

    /**
     * 1E订位价格存储使用
     */
    public String getQteCommand() {
        return this.qteCommand;
    }

    public void setQteCommand(String qteCommand) {
        this.qteCommand = qteCommand;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;

        final PriceInfoType other = (PriceInfoType) obj;
        return Objects.equal(this.qteCommand, other.qteCommand);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.qteCommand);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this).add("qteCommand", qteCommand).toString();
    }

}
