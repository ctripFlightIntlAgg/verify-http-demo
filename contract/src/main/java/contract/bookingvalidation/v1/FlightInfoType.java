/**
 * Autogenerated by soa-sdk-toolkit
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package contract.bookingvalidation.v1;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

@JsonAutoDetect(getterVisibility = Visibility.NONE, setterVisibility = Visibility.NONE, isGetterVisibility = Visibility.NONE)
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FlightInfoType", namespace = "urn:com:ctrip:flight:intl:booking:bookingValidation:contract:bookingvalidation:v1", propOrder = {
    "flightNumber", "seatCount"})
@SuppressWarnings("all")
public class FlightInfoType implements Serializable {

    private static final long serialVersionUID = 1L;

    public FlightInfoType(String flightNumber, int seatCount) {
        this.flightNumber = flightNumber;
        this.seatCount = seatCount;
    }

    public FlightInfoType() {
    }

    @JsonProperty("FlightNumber")
    @XmlElement(name = "FlightNumber")
    private String flightNumber;

    @JsonProperty("SeatCount")
    @XmlElement(name = "SeatCount")
    private int seatCount;

    /**
     * 航班号（由1~4个数字组成，后面或跟1个大写字母标注）
     */
    public String getFlightNumber() {
        return this.flightNumber;
    }

    public void setFlightNumber(String flightNumber) {
        this.flightNumber = flightNumber;
    }

    /**
     * 舱位数量
     */
    public int getSeatCount() {
        return this.seatCount;
    }

    public void setSeatCount(int seatCount) {
        this.seatCount = seatCount;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;

        final FlightInfoType other = (FlightInfoType) obj;
        return Objects.equal(this.flightNumber, other.flightNumber) && Objects.equal(this.seatCount, other.seatCount);
    }

    @Override
    public int hashCode() {
        int result = 1;

        result = 31 * result + Objects.hashCode(this.flightNumber);
        result = 31 * result + Objects.hashCode(this.seatCount);

        return result;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this).add("flightNumber", flightNumber).add("seatCount", seatCount)
            .toString();
    }

}